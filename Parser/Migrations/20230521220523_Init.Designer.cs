// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parser.EF.Data;

#nullable disable

namespace Parser.Migrations
{
    [DbContext(typeof(AppDBContex))]
    [Migration("20230521220523_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Parser.EF.Models.CarModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ConfigurationInfoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ConfigurationInfoID");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("Parser.EF.Models.ConfigurationInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ATM_MTM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CAB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Engine1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GearShiftType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LoadingCapacity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PartGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransmissionModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PartGroupID");

                    b.ToTable("ConfigurationInfos");
                });

            modelBuilder.Entity("Parser.EF.Models.PartGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartGroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PartSubGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubPartGroupID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PartSubGroupID");

                    b.ToTable("PartGroups");
                });

            modelBuilder.Entity("Parser.EF.Models.PartSubGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartGroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PartSubGroups");
                });

            modelBuilder.Entity("Parser.EF.Models.CarModel", b =>
                {
                    b.HasOne("Parser.EF.Models.ConfigurationInfo", "ConfigurationInfo")
                        .WithMany("CarModels")
                        .HasForeignKey("ConfigurationInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfigurationInfo");
                });

            modelBuilder.Entity("Parser.EF.Models.ConfigurationInfo", b =>
                {
                    b.HasOne("Parser.EF.Models.PartGroup", "PartGroup")
                        .WithMany("ConfigurationInfos")
                        .HasForeignKey("PartGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartGroup");
                });

            modelBuilder.Entity("Parser.EF.Models.PartGroup", b =>
                {
                    b.HasOne("Parser.EF.Models.PartSubGroup", "PartSubGroup")
                        .WithMany("PartGroups")
                        .HasForeignKey("PartSubGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartSubGroup");
                });

            modelBuilder.Entity("Parser.EF.Models.ConfigurationInfo", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("Parser.EF.Models.PartGroup", b =>
                {
                    b.Navigation("ConfigurationInfos");
                });

            modelBuilder.Entity("Parser.EF.Models.PartSubGroup", b =>
                {
                    b.Navigation("PartGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
